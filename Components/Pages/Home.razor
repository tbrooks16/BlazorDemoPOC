@page "/"
@using BlazorDemoPOC.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@implements IAsyncDisposable

<PageTitle>Home</PageTitle>

<h1 class="text-3xl font-bold mb-3">Blazor Demo</h1>
<p class="mb-2">This demo is to provide all the knowledge I have acquired from using Blazor. Below you'll find a list of topics.</p>
@* TODO Turn into Card *@
<ul>
    @foreach(var topic in Topics){
        <li class="list-disc hover:text-sky-400 m-1 w-fit">
            <NavLink class="nav-link p-2" href="@topic.Url"> @topic.Description </NavLink>
        </li>
    }
</ul>

@* <MyButton className="text-red-700" clickCallback="doSomething" @rendermode="InteractiveServer"/> *@
@* <ul class="px-2">
    @foreach(var test in tests)
    {
        <li class="list-decimal">@test.Username</li>
    }
</ul> *@

@code{
    #nullable disable
    private ApplicationDbContext context = default!;
    private List<Models.Test> tests = [];
    private List<Models.Topics> Topics = [
        new Models.Topics(){Id = 6, Description = "Project Setup & Integrating Tailwind", Url = "/setup"},
        new Models.Topics(){Id = 6, Description = "Dependency Injection", Url = "/di"},
        new Models.Topics(){Id = 1, Description = "A form with client and server validation", Url = "/forms"},
        new Models.Topics(){Id = 2, Description = "Render Modes & their caveats", Url = "/rendermodes"},
        new Models.Topics(){Id = 3, Description = "MudBlazor Component Show off", Url = "/mudblazor"},
        new Models.Topics(){Id = 4, Description = "DataTables using Mudblazor", Url = "/table"},
        new Models.Topics(){Id = 5, Description = "Streaming", Url = "/streaming"},
        new Models.Topics(){Id = 6, Description = "The Good the Bad and the Ugly with Blazor", Url = "/review"},
    ];
    public async ValueTask DisposeAsync(){
        await context.DisposeAsync();
    }

    protected override void OnInitialized(){
        context = DbFactory.CreateDbContext();
        tests = context.Test.ToList();

    }
}   